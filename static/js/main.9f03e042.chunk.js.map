{"version":3,"sources":["Layout.js","Hidetest.js","App.js","serviceWorker.js","index.js"],"names":["Layout","props","Container","children","HideText","state","showing","this","onClick","setState","React","Component","App","clicked","clickone","movetop","movedown","className","href","type","data-toggle","data-target","id","onMouseEnter","onMouseLeave","Boolean","window","location","hostname","match","Header","Car","brand","model","color","year","state1","MyForm","myChangeHandler","event","nam","target","name","val","value","username","age","onChange","Table","items","steps","isLoaded","fetch","then","res","json","catch","err","console","log","abilities","map","item","key","ability","game_indices","step","version","Table1","products","forms","product","base_experience","height","stats","stat","slice","base_stat","Table2","Type3","elements","istart","pokemon","element","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9f03e042.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Container } from 'react-bootstrap';\r\n\r\nexport const Layout=(props) =>(\r\n          <Container>\r\n            {props.children}\r\n\r\n          </Container>\r\n          \r\n\r\n\r\n)","import React from 'react';\r\n class HideText extends React.Component{\r\n    state = { showing: false };\r\n\r\n    render() {\r\n        const { showing } = this.state;\r\n        return (\r\n            <div>\r\n                <button onClick={() => this.setState({ showing: !showing })}>toggle</button>\r\n                { showing \r\n                    ? <div>This is visible</div>\r\n                    : null\r\n                }\r\n            </div>  \r\n        )\r\n    }\r\n}\r\nexport default HideText;","import React from 'react';\nimport './App.css';\nimport { Layout }from './Layout'\nimport HideText from './Hidetest'\n\n\nclass  App extends React.Component {\n        \n     state={clicked:false,\n            clickone:false, \n            movetop:false,\n            movedown:false \n\n     } \n   \n   render(){\n            const { clicked,clickone,movetop,movedown } = this.state;\n\n\n  return (\n <div className=\"Container\">\n <Layout/>\n    <nav className=\"navbar navbar-expand-md bg-dark navbar-dark\">\n  \n  <a className=\"navbar-brand\" href=\"link.html\">Navbar</a>\n\n  \n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#collapsibleNavbar\">\n    <span className=\"navbar-toggler-icon\"></span>\n  </button>\n\n  \n  <div className=\"collapse navbar-collapse\" id=\"collapsibleNavbar\">\n    <ul className=\"navbar-nav\">\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"link1.html\">Link</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"link2.html\">Link</a>\n      </li>\n      <li className=\"nav-item\">\n        <a className=\"nav-link\" href=\"link3.html\">Link</a>\n      </li>\n    </ul>\n  </div>\n</nav>\n\n\n    <div className=\"jumbotron\">\n    <h1>Bootstrap Testing</h1>      \n    <p>Bootstrap is the most popular HTML, CSS, and JS framework for developing responsive, mobile-first projects on the web.</p>\n  </div>\n  \n  <div className=\"row\">\n    <div className=\"col-sm-4\">\n              <button  onClick= { () => this.setState({ clicked : !clicked })}>\n        \n         Toogle </button>\n    \n         <div id=\"Header\"\n                    \n                    className= { clicked\n                                         ?  \"back\"\n                                         :   null}\n                         \n           \n\n\n         ></div>\n                 \n          \n\n    </div>\n  <div className=\"col-sm-4\">\n  <div id=\"color1\"\n\nonMouseEnter={ () => this.setState({movetop: !movetop })}\n onMouseLeave={() => this.setState({ movedown: !movedown })}\n\n \n             className={movetop\n                                  ? \"back\"\n                                  : null \n                          \n\n                          ||\n                      movedown\n                                  ? \"default\"\n                                  : null\n                  }                           \n  >Top Me </div>\n            <div id=\"Car\">\n\n            </div>\n\n  </div>\n  <div className=\"col-sm-4\">\n              \n            <div id=\"Form\"></div>\n  </div>\n\n</div>\n<div className=\"row\">\n\n<div className=\"col-sm-4\">\n            \n        <div id=\"classtype3\"></div>      \n\n</div>\n<div className=\"col-sm-4\">\n \n           \n                          \n          \n                \n                   \n             \n       \n             <div id=\"ApiTable\"\n\n                  className= { clicked\n                                         ?  \"back\"\n                                         :   null}\n              \n         ></div>\n\n\n\n\n</div>\n             \n            \n             \n\n            \n\n\n<div className=\"col-sm-4\" >\n\n      <div id=\"ApiTable1\" \n \n\n                className= { clickone\n                                         ?  \"font\"\n                                         :   null}\n              \n\n\n\n      >\n\n\n\n\n\n\n\n      </div>\n</div>\n\n</div>\n<div className=\"row\">\n<div className=\"col-sm-4\">\n\n            <div id=\"ApiTable2\"></div>\n</div>\n<div className=\"col-sm-4\">\n                                    <HideText/>\n</div>\n<div className=\"col-sm-4\" >\n\n       <div \n\n                  \n       onClick= { () => this.setState({ clicked : !clicked })}\n        \n         >0</div>\n    <button  onClick= { () => this.setState({ clickone : !clickone })}>\n        \n         Toogle </button>\n                              \n\n\n\n</div>\n\n</div>\n<div className=\"row\">\n\n<div className=\"col-sm-12\">\n         \n<hr></hr>\n</div>\n\n</div>\n<div className=\"footer\">\n\n<p> Testing React Francesco </p>\n\n\n</div>\n</div>\n\n  \n\n\n\n  );\n}\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nclass Header extends React.Component {\n  render() {\n    return (\n      <h1>This is the content of the 1 cell component</h1>\n    );\n  }\n}\n\nclass Car extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      brand: \"Ford\",\n      model: \"Mustang\",\n      color: \"red\",\n      year: 1964\n    };\n    this.state1 = {\n      brand: \"Volvo\",\n      model: \"Must\",\n      color: \"Black\",\n      year: 1970\n    };\n  }\n  render() {\n    return (\n      <table>\n      <tbody>\n      <tr>\n      <th>Brand</th>\n      <th>Color</th>\n      <th>Model</th>\n      <th>Year</th>\n      </tr>\n      <tr>\n         <td>{this.state.brand}</td>\n         <td>{this.state.color}</td>\n         <td>{this.state.model}</td>\n         <td>{this.state.year}</td>\n      </tr>\n        <tr>\n         <td>{this.state1.brand}</td>\n         <td>{this.state1.color}</td>\n         <td>{this.state1.model}</td>\n         <td>{this.state1.year}</td>\n       </tr>\n       </tbody>\n      </table>\n    );\n  }\n}\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      age: null,\n    };\n  }\n  myChangeHandler = (event) => {\n    let nam = event.target.name;\n    let val = event.target.value;\n    this.setState({[nam]: val});\n  }\n  render() {\n    return (\n      <form>\n      <h1>Hello {this.state.username} {this.state.age}</h1>\n      <p>Enter your name:</p>\n      <input\n        type='text'\n        name='username'\n        onChange={this.myChangeHandler}\n      />\n      <p>Enter your age:</p>\n      <input\n        type='text'\n        name='age'\n        onChange={this.myChangeHandler}\n      />\n      </form>\n    );\n  }\n}\nclass Table extends React.Component{\n     \n\n    /**\n     * constructor\n     *\n     * @object  @props  parent props\n     * @object  @state  component state\n     */\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            items: [],\n            steps: [],\n            isLoaded: false\n        }\n\n    }\n\n    /**\n     * componentDidMount\n     *\n     * Fetch json array of objects from given url and update state.\n     */\n    componentDidMount() {\n\n        fetch('https://pokeapi.co/api/v2/pokemon/ditto')\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    items: json,\n                    steps: json,\n                    isLoaded: true, \n                })\n            }).catch((err) => {\n                console.log(err);\n            });\n\n    }\n\n    /**\n     * render\n     *\n     * Render UI\n     */\n    render() {\n\n         const { isLoaded, items,steps } = this.state;\n\n         if (!isLoaded)\n             return <div>Loading...</div>;\n\n        return (\n            <div>\n                <ul>\n                    {items.abilities.map(item=>( \n                        <li key={item.ability.name}>\n                            {item.ability.name} \n                        </li>\n                  ))}  \n                </ul>\n              <ul>\n                    {steps.game_indices.map(step=>( \n                        <li key={step.version.name}>\n                            {step.version.name} \n                        </li>\n                  ))}  \n                </ul>\n            </div>\n           \n             \n                \n                  \n              \n            \n            );\n        \n\n    }\n\n}\nclass Table1 extends React.Component{\n     \n\n    /**\n     * constructor\n     *\n     * @object  @props  parent props\n     * @object  @state  component state\n     */\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n            items: [],\n            isLoaded: false,\n            \n        }\n\n    }\n\n    /**\n     * componentDidMount\n     *\n     * Fetch json array of objects from given url and update state.\n     */\n    componentDidMount() {\n\n        fetch('https://pokeapi.co/api/v2/pokemon/ditto')\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    products: json,\n                    isLoaded:true\n                     \n                })\n            }).catch((err) => {\n                console.log(err);\n            });\n\n    }\n\n    \n    /**\n     * render\n     *\n     * Render UI\n     */\n    render() {\n\n         const { isLoaded,products } = this.state;\n      if (!isLoaded)\n             return <div>Loading...</div>;\n\n         \n        return (\n            <div>\n            \n              <ul>\n                        {products.forms.map(product=>(\n\n                           <li key={product.name}>\n\n                               {product.name}\n\n                           </li>\n                 ))}\n                 <li>{products.base_experience}</li>\n                 <li>{products.height}</li>\n                    \n                 {products.stats.map(product=>(                                 \n                     <li key={product.stat.name}>{product.stat.name}</li>                    \n                  ))}                                                       \n                   {products.stats.slice(0,1).map(product=>(                                                 \n                         <li key={product.base_stat}>{product.base_stat}</li>                 \n                        ))}                  \n                </ul>\n            </div>                \n            );                 \n    }\n\n}\nclass Table2 extends React.Component{\n    \n    constructor(props) {\n    super(props);\n    this.state = {\n            products: [],\n            isLoaded:false,\n            \n        }\n\n    }\n\n    \n    componentDidMount() {\n\n        fetch('https://pokeapi.co/api/v2/pokemon/ditto')\n            .then(res => res.json())\n            .then(json => {\n                this.setState({\n                    products: json,\n                    isLoaded:true\n\n                     \n                })\n            }).catch((err) => {\n                console.log(err);\n            });\n\n    }\n\n    \n    \n    render() {\n        \n\n         const {isLoaded, products } = this.state;\n      if (!isLoaded)\n         return <div>Starting Loading...</div>\n         \n        return (\n            <div>\n            \n              <ul>\n                        {products.forms.map(product=>(\n\n                           <li key={product.name}>\n\n                               {product.name}\n\n                           </li>\n                 ))}\n                 <li>{products.base_experience}</li>\n                 <li>{products.height}</li>\n                    \n                 {products.stats.map(product =>(                                 \n                     <li key={product.stat.name}>{product.stat.name}</li>                    \n                  ))}                                                       \n                   {products.stats.slice(0,1).map(product=>(                                                 \n                         <li key={product.base_stat}>{product.base_stat}</li>                 \n                        ))}                  \n                </ul>\n            </div>                \n            );                 \n    }\n\n}\nclass  Type3 extends React.Component{\n  constructor(props){\n  super(props);\n\nthis.state= {\n       elements :[],\n       istart  :false,\n\n}\n}\n    componentDidMount(){\n       fetch('https://pokeapi.co/api/v2/type/3/')\n            .then(res=>res.json())\n            .then(json => {\n                   this.setState({\n                        elements:json,\n                        istart:true\n                   })\n            }).catch((err)=>{\n                 console.log(err);\n            }); \n\n            }\n       \n     \n\n      render(){\n                 \n         const {istart,elements}=this.state;\n         if (!istart)\n               return <div>Starting...</div>;\n            return(\n               <div>\n\n                    <ul>\n                        {elements.pokemon.slice(0,10).map(element =>(\n\n\n                           <li key={element.pokemon.name}>\n                                 {element.pokemon.name}\n                           </li>\n                          ))}\n                    </ul>\n               </div>\n      );       \n      }\n    }\n\n\nReactDOM.render(<App />, document.getElementById('root'));\nReactDOM.render(<Header />, document.getElementById('Header'));\nReactDOM.render(<Car />, document.getElementById('Car'));\nReactDOM.render(<MyForm />, document.getElementById('Form'));\nReactDOM.render(<Type3 />,document.getElementById('classtype3'));\nReactDOM.render(<Table />, document.getElementById('ApiTable'));\nReactDOM.render( <Table1 />, document.getElementById('ApiTable1'));\nReactDOM.render( <Table2 />, document.getElementById('ApiTable2'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}